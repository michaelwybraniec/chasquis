import * as zod from 'zod';
import { TypeOf, ZodRawShape } from 'zod';
import { Collection } from '@nuxt/content';

declare const schema: zod.ZodObject<{
    ogImage: zod.ZodOptional<zod.ZodObject<{
        url: zod.ZodOptional<zod.ZodString>;
        component: zod.ZodOptional<zod.ZodString>;
        props: zod.ZodRecord<zod.ZodString, zod.ZodAny>;
    }, "strip", zod.ZodTypeAny, {
        props: Record<string, any>;
        url?: string | undefined;
        component?: string | undefined;
    }, {
        props: Record<string, any>;
        url?: string | undefined;
        component?: string | undefined;
    }>>;
}, "strip", zod.ZodTypeAny, {
    ogImage?: {
        props: Record<string, any>;
        url?: string | undefined;
        component?: string | undefined;
    } | undefined;
}, {
    ogImage?: {
        props: Record<string, any>;
        url?: string | undefined;
        component?: string | undefined;
    } | undefined;
}>;
type OgImageSchema = TypeOf<typeof schema>;
declare function asOgImageCollection<T extends ZodRawShape>(collection: Collection<T>): Collection<T>;

export { type OgImageSchema, asOgImageCollection, schema };
